var tipuesearch = {"pages": [{'title': 'About', 'text': '設計一甲 \n 40823103 \n 呂霈瑜 \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n we have\xa0 \n', 'tags': '', 'url': 'Develop.html'}, {'title': 'Grouping', 'text': '1a \n wcmg1 組長: 40823131 40823126 40823123 40823124 40823128 \n wcmg2 組長: 40823112 40823108 40823109 40823111 40823145 \n wcmg3 組長: 40823125 40823129 40823137 40823136 40823151 \n wcmg4 組長:\xa040823110 40823103 40823107 40823130 40823142 \n wcmg5 組長:\xa040823143 40823144 40543118 40823127 \n', 'tags': '', 'url': 'Grouping.html'}, {'title': 'Ubuntu', 'text': '以下為建立 Ubuntu 20.04 虛擬主機, 用於網際內容管理, 電腦輔助設計實習與協同產品設計實習課程, 作爲區域網路或廣域網路伺服器主機課程練習之用. \n 由於每一台 Virtualbox 最多可以設定支援 36 片網路卡, 而且設定檔案可以透過程式方法控制各種設定, 因此適合用於上述課程中相關網際應用程式的部署使用, 也可以作為之後將網際程式配置到實體主機, 雲端主機或分散式版次管理系統 CI/CD 配置模擬. \n 請登入 ＠gm 帳號後下載 \xa0 Ubuntu20.04_cd2020pj1.vdi \xa0 (11 GB, 用於 CMSiMDE, CoppeliaSim, Pyslvs, Range3, NGSolve, Jupyter 網際程式開發) \n 因為在 Virtualbox 中的每一個虛擬硬碟檔案, 都必須要有獨立的 UUID, 因此若複製虛擬硬碟檔案, 而且要在同一電腦上使用, 可以使用下列指令變更 UUID: \n "c:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe" internalcommands sethduuid registered_vdi.vdi \n Ubuntu Server (3GB) \n 登入 @gm 帳號後, 下載 \xa0 ubuntu-20.04-live-server-amd64.iso \n 或從\xa0 https://ubuntu.com/download/server \xa0下載 Ubuntu Server 20.04 iso 檔案, 利用 \xa0 Virtualbox \xa0 建立成虛擬主機檔案. \n 安裝 Graphical Environment (1GB) \n sudo apt install xorg \n 安裝 LXDE Window Manager (800 MB) \n sudo apt install lxde \n \xa0安裝 CMSiMDE 所需的 modules \n 若 pip3 尚未安裝, 則以 sudo apt install python3-pip\xa0 進行安裝 (增加 200MB) \n sudo pip3 install flask flask_cors lxml bs4 markdown pelican leo \n 安裝開發 Oauth2 所需模組 \n sudo pip3 install authomatic github3.py \n 安裝 CoppeliaSim \n 從 \xa0 https://www.coppeliarobotics.com/ubuntuVersions \xa0 下載 edu Linux 版本, 解開壓縮檔案後, 透過 coppelia.sh 執行. \n 為了能直接在 Terminal 執行 CoppeliaSim 目錄中的 coppelia.sh, 可以編輯 /etc/profile \n 加入 CoppeliaSim 所在目錄: \n export PATH=/home/kmol2020/coppeliasim4:PATH \n 然後以 source /etc/profile 讓命令搜尋路徑設定生效. \n 安裝 numpy, opencv-python 與 imutils 等 Python 3 模組, 用於影像辨識程式開發 \n sudo pip3 install numpy opencv-python imutils \n 編譯 Pyslvs-UI \n git clone --recurse-submodule \xa0 https://github.com/kmolyuan/solvespace.git \n cd solvespace/cython \n sudo pip3 install -r requirements.txt \n sudo python3 setup.py install \n git clone --recurse-submodule \xa0 https://github.com/kmolyuan/pyslvs-ui.git \n cd pyslvs-ui \n sudo pip3 install -r requirements.txt \n sudo python3 setup.py install \n 完成後以 pyslvs 開啟. \n 編譯 Range3 \n git clone \xa0 https://github.com/Range-Software/range3.git \n cd range3 \n sudo ./scripts/prereqs_debian.sh \n ./scripts/build.sh --clean && ./scripts/create_package.sh \n 執行 \n cd build-Release/Range/ \n ./Range \n 修改所有用戶的指令搜尋路徑 \n 編輯 /etc/profile \n 加入 \n export PATH=/home/kmol2020/tmp/range3/build-Release/Range:PATH \n 之後 \n source /etc/profile \n 接下來只要輸入 Range 就可以開啟 Range3 \n 安裝 NGSolve \n sudo apt-add-repository universe sudo add-apt-repository ppa:ngsolve/ngsolve \n sudo apt-get update sudo apt-get install ngsolve \n xterm 設定 \n .Xresources 檔案 \n \n \n \n \n \n \n 1 \n \n \n \n xterm*font:\xa0\xa0\xa0\xa0 *-fixed-*-*-*-18-* \n \n \n \n \n \n \n \n 讓 .Xresources 設定生效: \n \n \n \n \n \n \n 1 \n \n \n \n xrdb ~/.Xresources \n \n \n \n \n \n \n \n 提高檔案開啟數量 \n vi /etc/security/limits.conf \n 加入 \n \n \n \n \n \n \n 1 \n \n \n \n * - nofile 40960 \n \n \n \n \n \n \n \n \xa0利用 \n ulimit -a | grep ‘open files’ 檢查 \n 安裝 Jupyterhub \n install npm and nodejs \n sudo apt -y install npm nodejs \n install proxy with npm \n sudo npm install -g configurable-http-proxy \n install jupyterhub \n sudo pip3 install jupyterhub \n install jupyter notebook \n sudo pip3 install notebook \n 完成上述安裝後, 可以利用 jupyterhub --no-ssl 在近端以內定 port 8000 測試. \n 若要使用 https 啟動, 可利用 \n sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout jupyterhub.key -out jupyterhub.crt \n 建立所需的 key 與 certificate, 然後以 \n sudo jupyterhub --ip 192.168.56.3 --port 443 --ssl-key jupyterhub.key --ssl-cert jupyterhub.cert \n 啟動後, 利用 \xa0 https://192.168.56.3 \xa0 進行連線. \n 其他與 Jupyterhub 有關的參考資料: \n http://project.mde.tw/blog/yen-ji-jie-she-ji-zhuan-ti-xue-yuan-de-sui-shen-jupyter-hub.html \n https://cadlab.mde.tw/post/jupyterhub-oauth2-deng-ru-she-ding.html \n https://chiamingyen.github.io/kmolab/blog/jin-duan-jupyterhub-dian-nao-zhu-ji-she-ding.html \n https://github.com/jupyterhub/jupyterhub/wiki/Installation-of-Jupyterhub-on-remote-server \n 利用網際 Python 程式解平面多連桿機構運動模擬方程式: \n http://lab.kmol.info/2017fall/blog/kmol-brython-editor-331.html \n', 'tags': '', 'url': 'Ubuntu.html'}, {'title': '伺服器管理', 'text': '常用指令: \n env - 列出 Shell 環境變數 \n history - 列出歷史指令, 可利用上下 arrow 鍵列出先前輸入的指令, 也可以使用 Ctrl + p 與 Ctrl + N 往前或往後列出歷史指令. \n Ctrl + c - 終止指令執行 \n Ctrl + z - 跳出互動指令執行模式 \n cd - change directory \n pwd - print working directory \n mkdir - make directory \n rmdir - remove directory \n ls - list files \n rm - remove files \n cp - copy files \n mv - move files \n cat - display content of a file \n tail - show just the last lines of a file \n head - display first lines of a file \n grep - grep keyword files \n 重要檔案: \n 每一用戶登入後都會執行 /etc/profile, 因此若有共用的環境變數, 可以寫進 /etc/profile 設定檔案 \n', 'tags': '', 'url': '伺服器管理.html'}, {'title': 'Netplan', 'text': '若在 Windows 10 中啟動 Virtualbox Ubuntu 20.04 則可將網路設為 Host Only, 不使用 DHCP, 而進入 Ubuntu 之後, 以 netplan 手動設定在 Windows 10 可以連線的區域網路. \n 例如: Windows Gateway 設為 192.168.56.1, 而 Host Only 虛擬主機設為 192.168.56.2 \n /etc/netplan/00-installer-config.yaml \n network:\n  version: 2\n  renderer: networkd\n  ethernets:\n    enp3s0:\n      dhcp6: true\n      addresses:\n        - 10.10.10.2/24\n      gateway4: 10.10.10.1\n      nameservers:\n          search: [mydomain, otherdomain]\n          addresses: [10.10.10.1, 1.1.1.1]\n \n', 'tags': '', 'url': 'Netplan.html'}, {'title': '每周進度', 'text': '', 'tags': '', 'url': '每周進度.html'}, {'title': 'W9-W11', 'text': '說明如何利用 Python 程式讀取學員修課檔案, 以及從 Google Sheet 轉出的 .csv, 分別處理為 List 與 Dictionary 資料格式之後, 逐一根據學員 List 學號, 從 Dictionary 取出自評成績. \n import csv\n \n# read student list\n \nfilename = \'E:/wcm2020/data/tmp/2020_spring_score/2a/2a_list.txt\'\nwith open(filename, encoding="utf-8") as f:\n    content = f.readlines()\n#print(content)\nstudent = [x.strip() for x in content] \n#print(student)\n \n \n# Timestamp, email, 修課名稱, url, score, desp, memo\n# 0, 1, 2, 3, 4, 5, 6\n#total = 0\nall = {}\nwith open(\'y:/2020midterm.csv\', encoding="utf-8") as csv_file:\n    csv_reader = csv.reader(csv_file, delimiter=\',\')\n    #print(csv_reader)\n \n    line_count = 0\n    for row in csv_reader:\n        if line_count == 0:\n            #print(f\'Column names are {", ".join(row)}\')\n            line_count += 1\n        else:\n            student_num = row[1].split("@")[0]\n            #print(student_num)\n            student_score = row[4]\n            #print(student_score)\n            try:\n                all.update({student_num: student_score})\n            except:\n                all.update({student_num: "error"})\n            #print(f\'\\t{row[0]} works in the {row[1]} department, and was born in {row[2]}.\')\n            #print(f\'\\t{row[4]}\')\n            #total += int(row[4])\n            line_count += 1\n#print(all)\n#print(student)\n \n \nfor i in student:\n     \n    #if i in all:\n        #pass\n    #else:\n        #print(str(i))\n     \n    try:\n        print(i + "\\t" + all[i])\n    except:\n        print(i + "\\t60")\n \n    #print(f\'Processed {line_count} lines.\')\n    #print("平均=" + str(total/line_count)) \n Python and Flask \n Login to your gm email account and download \xa0 2019_ABeginnersGuideToPython3Programming.pdf \n Login to your gm email account and download \xa0 2019_BuildingRESTAPIsWithFlask.pdf \n https://github.com/mstamy2/PyPDF2 \n https://mde.tw/cd2020pj1 \n W9 \n https://www.blog.pythonlibrary.org/2018/06/07/an-intro-to-pypdf2/ \n https://github.com/topics/pypdf2 \n https://flask.palletsprojects.com/en/1.1.x/patterns/fileuploads/ \n Flask 與 SQLite \n W11 \n 簡介網際內容管理與計算機程式及電腦輔助設計與實習課程的關聯性 \n W11 教學影片-1 \xa0 (登入 @gm 後可以在線觀看) \n 使用 SSH push github 倉儲改版教學影片 \xa0 (登入 @gm 後可以在線觀看) \n 說明如何將網際 Python 放入 Virtualbox 虛擬主機中 \n Virtualbox Ubuntu 虛擬主機使用教學影片 \xa0 (登入 @gm 後可以在線觀看) \n Ubuntu 20.04 wcm2020.ova 下載 \xa0 (登入 @gm 後可以下載) \n', 'tags': '', 'url': 'W9-W11.html'}, {'title': 'W12-W15', 'text': 'W12 \n 說明 如何在 Windows 10 中安裝 Ubuntu 20.04 Virtualbox 虛擬主機教學影片 \xa0 (for @gm users only) \n 說明 期末專案與 cd2020pj1 的關聯教學影片 \xa0 (for @gm users only) \n cd2020pj1 倉儲 \n W13 \n 完成 IPv6 實體主機搭建: \xa0 http://wcm.kmol.info \xa0(IP 為 ~17:2020::1) \n 準備將 \xa0 https://github.com/mdecourse/cd2020pj1.git \xa0進行開機啟動配置. \n 各分組嘗試建立 wcm1.kmol.info ~ wcm4.kmol.info 等實體主機. \n IP 將分別設為 ~17:2020::2 至 ~ 17:2020::5 \n 符號名稱分別為: wcm1.kmol.info ～ wcm4.kmol.info \n 安裝 NGINX WWW Server: \n sudo apt install nginx \n nginx 設定檔案位於 /etc/nginx/nginx.conf 可用於配置 CMSiMDE 靜態網頁 \n 若在純 IPv6 下需要設定 Proxy, 則在 /etc/apt/apt.conf.d 中需要新增 proxy.conf, 內容如下: \n Acquire::http::Proxy "http://[proxy_ip_address]:3128"; \n 設定時區: \n sudo timedatectl set-timezone Aia/Taipei \n W13 教學影片 _導入 Filezilla 協助管理 Ubuntu 20.04 實體主機 (for @gm users only) \n W14 \n Ubuntu 20.04 編譯 NGINX 教學影片 1 \xa0 (for @gm users only) \n Ubuntu 20.04 編譯 NGINX 教學影片 2 \xa0 (for @gm users only) \n 各分組除了將 W1-W13 週之上課內容整理至個人及分組的網際內容管理系統之外, 將在虛擬與實體主機上完成網際 PDF 檔案管理系統. \n W15 \n 利用 Pypdf2 切割 pdf 檔案教學影片 \xa0 (for @gm users only) \n 利用 HxD 編修 pip.exe 教學影片 \xa0 (for @gm users only) \n https://mh-nexus.de/en/hxd/ \n https://bootstrap.pypa.io/get-pip.py \n https://en.wikipedia.org/wiki/STL_(file_format) \n 說明如何在 cd2020pj1 網際程式架構下納入 pypdf2 的功能 教學影片 \xa0 (for @gm users only) \n https://github.com/mdecourse/cd2020pj1 \n', 'tags': '', 'url': 'W12-W15.html'}, {'title': 'W16-W17', 'text': 'W16 \n cd2020pj1 網際程式開發說明影片之一 \xa0 (for @gm users only) \n cd2020pj1 網際程式開發說明影片之二 \xa0 (for @gm users only) \n cd2020pj1 網際程式開發說明影片之三 \xa0 (for @gm users only) \n W17 \n cd2020pj1 pdf 網際分割與合併程式說明 \xa0 (for @gm users only)', 'tags': '', 'url': 'W16-W17.html'}]};